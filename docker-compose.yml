version: "3.9"

services:
  auth_service:
    build: ./backend/auth_service
    ports:
      - "8001:8000"
    env_file:
      - ./backend/auth_service/.env
    depends_on:
      - postgres_auth
    volumes:
      - ./backend/auth_service:/app
    command: [ "./wait-for-it.sh", "postgres_tracking:5432", "--", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000" ]

  postgres_auth:
    image: postgres:16
    env_file:
      - ./backend/auth_service/.env
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  telegram_bot:
    build: ./backend/telegram_bot
    env_file:
      - ./backend/telegram_bot/.env
    depends_on:
      - auth_service
    volumes:
      - ./backend/telegram_bot:/app

  tracking_service:
    build: ./backend/tracking_service
    ports:
      - "8002:8000"
    env_file:
      - ./backend/tracking_service/.env
    depends_on:
      - postgres_tracking
    volumes:
      - ./backend/tracking_service:/app
    command: [ "./wait-for-it.sh", "postgres_tracking:5432", "--", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000" ]

  postgres_tracking:
    image: postgres:16
    env_file:
      - ./backend/tracking_service/.env
    volumes:
      - tracking_pgdata:/var/lib/postgresql/data
    ports:
      - "5435:5432"

  redis:
    image: redis:7
    container_name: redis_service
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped

  celery_worker:
    build: ./backend/tracking_service
    command: celery -A tasks.celery_app worker --loglevel=info
    env_file:
      - ./backend/tracking_service/.env
    volumes:
      - ./backend/tracking_service:/app
    depends_on:
      - tracking_service
      - redis
      - rabbitmq

  celery_beat:
    build: ./backend/tracking_service
    command: celery -A tasks.celery_app beat --loglevel=info
    volumes:
      - ./backend/tracking_service:/app
    depends_on:
      - rabbitmq
      - redis
      - tracking_service
    env_file:
      - ./backend/tracking_service/.env

  notification_service:
    build: ./backend/notification_service
    env_file:
      - ./backend/notification_service/.env
    depends_on:
      - rabbitmq
    volumes:
      - ./backend/notification_service:/app
  
  api_gateway:
    build: ./backend/api_gateway
    ports:
      - "8080:80"
    depends_on:
      - auth_service
      - tracking_service
      - notification_service

volumes:
  auth_pgdata:
  tracking_pgdata:
  redis_data:
